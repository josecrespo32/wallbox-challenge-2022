#! /usr/bin/env python3

import datetime
import os
import sys

from behave import parser


class TestPlanGenerator():

    TESTPLAN_NAME = f"Test_Plan_autogenerated_{datetime.datetime.now().strftime('%Y%m%d_%H%M')}.md"

    def __init__(self):
        self.md = '# TestPlan Autogenerated for Wallbox Challenge App\n\n'

        self._generate()
        self._write()

    def _generate(self):
        for root, dirs, files in os.walk('features'):
            for feature in files:
                if feature.endswith('.feature'):
                    with open(os.path.join(root, feature), 'r') as f:
                        self._write_feature(parser.parse_feature(f.read()))

    def _write_feature(self, feature):
        self.md += f'## Feature: {feature.name} \n'
        self.md += '\n'.join([f'- {desc}' for desc in feature.description]) + '\n\n'
        for scenario in feature.walk_scenarios():
            self._write_scenario(scenario)

    def _write_scenario(self, scenario):
        self.md += f'##### Scenario: {scenario.name} \n'
        self.md += '\n'.join([f'- {desc}' for desc in scenario.description]) + '\n\n'

    def _write(self):
        self.md = self.md.replace('BUG', '**BUG**')
        with open(os.path.join('testplans', self.TESTPLAN_NAME), 'w') as f:
            f.write(self.md)

        print(f'TestPlan successfully generated at testplans/{self.TESTPLAN_NAME}')


if __name__ == '__main__':
    try:
        TestPlanGenerator()
    except KeyboardInterrupt:
        sys.exit('\n\tctrl + c detected, exiting...\n')
    except Exception as err:
        sys.exit(err)
